[
  {
    "subsystem": "vm",
    "description": "Core functionality provided by the VM that isn't related to any kind of I/O.",
    "syscalls": [
      {
        "name": "memcpy",
        "args": [
          [
            "u8*",
            "dst"
          ],
          [
            "const u8*",
            "src"
          ],
          [
            "u64",
            "num_bytes"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "default_allowed",
        "const_idx": 3,
        "description": "Copy a block of memory in the heap from a source address to a destination address."
      },
      {
        "name": "memset",
        "args": [
          [
            "u8*",
            "dst"
          ],
          [
            "u8",
            "value"
          ],
          [
            "u64",
            "num_bytes"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "default_allowed",
        "const_idx": 4,
        "description": "Fill a block of bytes in the heap with a given value."
      }
    ]
  },
  {
    "subsystem": "io",
    "description": "File and stream I/O functionality",
    "syscalls": [
      {
        "name": "print_i64",
        "args": [
          [
            "i64",
            "val"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "default_allowed",
        "const_idx": 5,
        "description": "Print an i64 value to standard output"
      },
      {
        "name": "print_str",
        "args": [
          [
            "const char*",
            "str"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "default_allowed",
        "const_idx": 6,
        "description": "Print a string to standard output"
      },
      {
        "name": "print_endl",
        "args": [],
        "returns": [
          "void",
          ""
        ],
        "permission": "default_allowed",
        "const_idx": 7,
        "description": "Print a newline to standard output"
      },
      {
        "name": "read_i64",
        "args": [],
        "returns": [
          "i64",
          "val"
        ],
        "permission": "default_allowed",
        "const_idx": 8,
        "description": "Read an i64 value from standard input"
      }
    ]
  },
  {
    "subsystem": "time",
    "description": "Date, time and timing related system calls.",
    "syscalls": [
      {
        "name": "time_current_ms",
        "args": [],
        "returns": [
          "u64",
          "timestamp"
        ],
        "permission": "time_get_time",
        "const_idx": 0,
        "description": "Get the UNIX time stamp in milliseconds."
      },
      {
        "name": "time_delay_cb",
        "args": [
          [
            "u64",
            "delay_ms"
          ],
          [
            "void*",
            "callback"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "default_allowed",
        "const_idx": 2,
        "description": "Schedule a callback to be called once after a given delay."
      }
    ]
  },
  {
    "subsystem": "window",
    "description": null,
    "syscalls": [
      {
        "name": "window_create",
        "args": [
          [
            "u32",
            "width"
          ],
          [
            "u32",
            "height"
          ],
          [
            "const char*",
            "title"
          ],
          [
            "u64",
            "flags"
          ]
        ],
        "returns": [
          "u32",
          "window_id"
        ],
        "permission": "window_display",
        "const_idx": 1,
        "description": "Create a new window with a frame buffer to draw into."
      },
      {
        "name": "window_show",
        "args": [
          [
            "u32",
            "window_id"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "window_display",
        "const_idx": 9,
        "description": "Show a window, initially not visible when created."
      },
      {
        "name": "window_draw_frame",
        "args": [
          [
            "u32",
            "window_id"
          ],
          [
            "const u8*",
            "pixel_data"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "window_display",
        "const_idx": 10,
        "description": "Copy a frame of RGB24 pixels to be displayed into the window."
      },
      {
        "name": "window_on_mousemove",
        "args": [
          [
            "u32",
            "window_id"
          ],
          [
            "void*",
            "callback"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "window_display",
        "const_idx": 11,
        "description": "Register a callback for mouse movement."
      },
      {
        "name": "window_on_mousedown",
        "args": [
          [
            "u32",
            "window_id"
          ],
          [
            "void*",
            "callback"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "window_display",
        "const_idx": 12,
        "description": "Register a callback for mouse button press events."
      },
      {
        "name": "window_on_mouseup",
        "args": [
          [
            "u32",
            "window_id"
          ],
          [
            "void*",
            "callback"
          ]
        ],
        "returns": [
          "void",
          ""
        ],
        "permission": "window_display",
        "const_idx": 13,
        "description": "Register a callback for mouse button release events."
      }
    ]
  },
  {
    "subsystem": "audio",
    "description": "Audio input and output.",
    "syscalls": []
  },
  {
    "subsystem": "net",
    "description": "Network-related functionality.",
    "syscalls": []
  }
]